{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/page/japanse-grammar/japanse-grammar.component.ts","webpack:///src/app/page/japanse-grammar/japanse-grammar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","translate","title","setDefaultLang","selector","templateUrl","styleUrls","AppModule","loader","provide","useFactory","HttpLoaderFactory","deps","declarations","providers","bootstrap","http","JapanseGrammarComponent","levelList","selectedLevel","filter","realMode","multiLanguge","vn","ja","en","keySearch","listData","listDataLevel","All","N1","N2","N3","N4","N5","topPosToStartShowing","listDataConst","item","level","name","event","changeLevel","target","value","contentResearch","toLowerCase","indexOf","replaceKey","listString","result","forEach","element","reibunJA","reibunVN","reibunRO","scrollPosition","window","pageYOffset","document","documentElement","scrollTop","body","isShow","scroll","top","left","behavior","key","i","spaceCount","split","length","replace","changeLanguge","openFilter","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { JapanseGrammarComponent } from './page/japanse-grammar/japanse-grammar.component';\n\nconst routes: Routes = [\n  { path: '', component: JapanseGrammarComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Japanese Grammar';\n  constructor(private translate: TranslateService) {\n    translate.setDefaultLang('ja');\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\n\n// import ngx-translate and the http loader\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\n// Generate component\nimport { JapanseGrammarComponent } from './page/japanse-grammar/japanse-grammar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JapanseGrammarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDividerModule,\n    MatCardModule,\n    // ngx-translate and the loader module\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n// required for AOT compilation\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport data from '../../../assets/data/DataJsonJlptVietNam.json';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-japanse-grammar',\n  templateUrl: './japanse-grammar.component.html',\n  styleUrls: ['./japanse-grammar.component.css']\n})\nexport class JapanseGrammarComponent implements OnInit {\n\n  constructor(private translate: TranslateService) {\n    translate.setDefaultLang('vn');\n  }\n\n  levelList = ['All', 'N5', 'N4', 'N3', 'N2', 'N1'];\n  selectedLevel = '';\n  filter = true;\n  realMode = false;\n  multiLanguge = { vn: false, ja: false, en: false };\n  keySearch = '';\n\n  // tslint:disable-next-line: no-use-before-declare\n  listData = [];\n  listDataLevel = {\n    All: [],\n    N1: [],\n    N2: [],\n    N3: [],\n    N4: [],\n    N5: []\n  };\n\n  isShow: boolean;\n  topPosToStartShowing = 100;\n\n  ngOnInit() {\n    this.multiLanguge.vn = true;\n    this.listDataLevel.All = listDataConst;\n    this.listDataLevel.N1 = listDataConst.filter(item => item.level === 'N1');\n    this.listDataLevel.N2 = listDataConst.filter(item => item.level === 'N2');\n    this.listDataLevel.N3 = listDataConst.filter(item => item.level === 'N3');\n    this.listDataLevel.N4 = listDataConst.filter(item => item.level === 'N4');\n    this.listDataLevel.N5 = listDataConst.filter(item => item.level === 'N5');\n  }\n\n  openFilter() {\n    if (this.filter === true) {\n      this.filter = false;\n    } else {\n      this.filter = true;\n    }\n  }\n\n  changeMode() {\n    if (this.realMode === true) {\n      this.realMode = false;\n    } else {\n      this.realMode = true;\n    }\n  }\n\n  changeLanguge(name: any) {\n    this.multiLanguge.vn = false;\n    this.multiLanguge.ja = false;\n    this.multiLanguge.en = false;\n\n    if (name === 'vn') {\n      this.multiLanguge.vn = true;\n      this.translate.setDefaultLang('vn');\n    } else if (name === 'ja') {\n      this.multiLanguge.ja = true;\n      this.translate.setDefaultLang('ja');\n    } else if (name === 'en') {\n      this.multiLanguge.en = true;\n      this.translate.setDefaultLang('en');\n    }\n  }\n\n  search(event: any) {\n\n    this.changeLevel(this.selectedLevel);\n\n    if (event.target.value !== '') {\n\n      this.changeLevel(this.selectedLevel);\n\n      this.listData = this.listData.filter(item =>\n        item.contentResearch.toLowerCase().indexOf(this.replaceKey(event.target.value).toLowerCase()) > -1\n      );\n    }\n\n  }\n\n  plusMeaningUse(listString: any[]) {\n    let result = '';\n    listString.forEach(element => {\n      result += element.value + ' ';\n    });\n    return result;\n  }\n\n  plusSentence(listString: any[]) {\n    let result = '';\n    listString.forEach(element => {\n      result += element.reibunJA + ' ' + element.reibunVN + ' ' + element.reibunRO;\n    });\n    return result;\n  }\n\n  changeLevel(event: any) {\n    this.selectedLevel = event;\n    if (this.selectedLevel === 'All') {\n      this.listData = this.listDataLevel.All;\n    } else if (this.selectedLevel === 'N1') {\n      this.listData = this.listDataLevel.N1;\n    } else if (this.selectedLevel === 'N2') {\n      this.listData = this.listDataLevel.N2;\n    } else if (this.selectedLevel === 'N3') {\n      this.listData = this.listDataLevel.N3;\n    } else if (this.selectedLevel === 'N4') {\n      this.listData = this.listDataLevel.N4;\n    } else if (this.selectedLevel === 'N5') {\n      this.listData = this.listDataLevel.N5;\n    } else {\n      this.listData = [];\n    }\n  }\n\n  @HostListener('window:scroll')\n  checkScroll() {\n    const scrollPosition = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n\n    if (scrollPosition >= this.topPosToStartShowing) {\n      this.isShow = true;\n    } else {\n      this.isShow = false;\n    }\n  }\n\n  gotoTop() {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n\n  replaceKey(key: string) {\n    let i;\n    let spaceCount = (key.split(' ').length);\n    if (spaceCount <= 15) {\n      spaceCount = 15;\n    }\n    for (i = 0; i <= spaceCount; i++) {\n      key = key.replace('\\n', '')\n        .replace('…', '')\n        .replace('\\r', '')\n        .replace('『', '')\n        .replace('』', '')\n        .replace('.', '')\n        .replace('✙', '')\n        .replace('　✙　', '')\n        .replace('。', '')\n        .replace(' ', '')\n        .replace('/', '')\n        .replace('(', '')\n        .replace(')', '')\n        .replace('　', '')\n        .replace('“', '')\n        .replace('”', '')\n        .replace('～', '')\n        .replace('~', '')\n        .replace(' (', '')\n        .replace('？', '')\n        .replace('?', '')\n        .replace('!', '')\n        .replace('+', '')\n        .replace('-', '')\n        .replace('\"', '');\n    }\n    return key;\n  }\n\n}\n\nconst listDataConst = data;\n","<div class=\"container\" fxLayout=\"column\">\n    <div fxLayout=\"column\" class=\"top-page\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n            <div fxLayoutGap=\"20px\">\n                <img src=\"../../../assets/img/ninja_katana.ico\" class=\"flag-language\" *ngIf=\"selectedLevel === 'N5' || selectedLevel == 'All'\">\n                <img src=\"../../../assets/img/samurai_warrior_.ico\" class=\"flag-language\" *ngIf=\"selectedLevel === 'N4' || selectedLevel == 'All'\">\n                <img src=\"../../../assets/img/japan_culture.ico\" class=\"flag-language\" *ngIf=\"selectedLevel === 'N3' || selectedLevel == 'All'\">\n                <img src=\"../../../assets/img/kabuki_japan.ico\" class=\"flag-language\" *ngIf=\"selectedLevel === 'N2' || selectedLevel == 'All'\">\n                <img src=\"../../../assets/img/japan_monk_2.ico\" class=\"flag-language\" *ngIf=\"selectedLevel === 'N1' || selectedLevel == 'All'\">\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"end none\">\n                <button mat-icon-button [ngClass]=\"{'flag-active': multiLanguge.vn}\" (click)=\"changeLanguge('vn')\">\n          <img src=\"../../../assets/img/vietnam_flag.png\" class=\"flag-language\">\n        </button>\n                <button mat-icon-button [ngClass]=\"{'flag-active': multiLanguge.ja}\" (click)=\"changeLanguge('ja')\">\n          <img src=\"../../../assets/img/japan_flags_flag.png\" class=\"flag-language\">\n        </button>\n                <button mat-icon-button [ngClass]=\"{'flag-active': multiLanguge.en}\" (click)=\"changeLanguge('en')\">\n          <img src=\"../../../assets/img/united_states_flag.png\" class=\"flag-language\">\n        </button>\n            </div>\n        </div>\n\n        <h2 fxLayoutAlign=\"center none\" (click)=\"openFilter()\" class=\"title-page\">\n            {{'TXT001' | translate}}\n        </h2>\n\n        <mat-form-field appearance=\"outline\" *ngIf=\"filter\">\n            <mat-label>{{'TXT002' | translate}}</mat-label>\n            <mat-select (selectionChange)=\"changeLevel($event.value)\">\n                <mat-option *ngFor=\"let level of levelList\" [value]=\"level\">\n                    {{ level | translate}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" *ngIf=\"filter&&!realMode\">\n            <mat-label>{{'TXT003' | translate}}</mat-label>\n            <input matInput placeholder=\"{{'TXT004' | translate}}\" (keyup.enter)=\"search($event)\">\n            <button mat-icon-button matSuffix (click)=\"changeMode()\">\n        <mat-icon>eco</mat-icon>\n      </button>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\" *ngIf=\"filter&&realMode\">\n            <mat-label>{{'TXT003' | translate}}</mat-label>\n            <input matInput placeholder=\"{{'TXT004' | translate}}\" (keyup)=\"search($event)\">\n            <button mat-icon-button matSuffix (click)=\"changeMode()\">\n        <mat-icon>offline_bolt</mat-icon>\n      </button>\n        </mat-form-field>\n\n        <mat-divider></mat-divider>\n\n        <h3 fxLayoutAlign=\"center\">{{'TXT005' | translate}}{{ listData.length }}</h3>\n    </div>\n\n    <div class=\"list-grammar\">\n        <mat-card fxLayout=\"column\" [ngClass]=\"{'card-even': cardIndex%2 !== 0, 'card-perhaps': cardIndex%2 === 0}\" class=\"card-grammar\" *ngFor=\"let gram of listData; let cardIndex = index\">\n            <h4 class=\"bold\">\n                {{ 'TXT010'| translate }} {{ cardIndex + 1 }}: {{ gram.description }}\n            </h4>\n            <h5 class=\"bold\">\n                {{ gram.name }}\n            </h5>\n            <div fxLayout=\"column\">\n                <h5 class=\"bold\">\n                    {{ 'TXT006' | translate }}\n                </h5>\n                <p *ngFor=\"let mean of gram.meaning\">\n                    {{ mean.value }}\n                </p>\n            </div>\n            <div fxLayout=\"column\">\n                <h5 class=\"bold\">\n                    {{ 'TXT007' | translate }}\n                </h5>\n                <p *ngFor=\"let u of gram.use\">\n                    {{ u.value }}\n                </p>\n            </div>\n            <div fxLayout=\"column\">\n                <h5 class=\"bold\">\n                    {{ 'TXT008' | translate }}\n                </h5>\n                <div fxLayout=\"column\" *ngFor=\"let sen of gram.sentence; let i = index\">\n                    <h5 class=\"bold\">\n                        {{ 'TXT009' | translate }}{{ i + 1 }}:\n                    </h5>\n                    <p class=\"bold\">\n                        {{ sen.reibunJA }}\n                    </p>\n                    <p>\n                        {{ sen.reibunVN }}\n                    </p>\n                    <p>\n                        /{{ sen.reibunRO }}/\n                    </p>\n                </div>\n            </div>\n        </mat-card>\n    </div>\n\n</div>\n\n<button class=\"scrolling-goto-top\" *ngIf=\"isShow\" (click)=\"gotoTop()\">👆</button>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}